server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      # api gateway 라우트를 등록한다.
      routes:
      - id: users-status-check
        # /users/status/check 경로로 API 게이트웨이에 GET 요청하면 게이트웨이가 http://localhost:8081 호스트로 다시 요청.
        #uri: http://localhost:8081

        # 로드 밸런싱을 적용하려면 lb://{eureka에 등록된 application name} 형태로 작성한다.
        # eureka 에서 resource-server 로 된 이름의 application을 검색하고 등록된 인스턴스들을 찾아서 로드 밸런싱을 수행한다.
        uri: lb://resource-server
        predicates:
        - Path=/users/status/check
        - Method=GET
        # 요청과 응답에 대한 수정. 요청 헤더에서 쿠키를 삭제
        filters:
        - RemoveRequestHeader=Cookie

      - id: albums
        #uri: http://localhost:8091
        url: lb://resource-server-albums
        predicates:
        - Path=/albums
        - Method=GET
        filters:
        - RemoveRequestHeader=Cookie

      - id: photos
        #uri: http://localhost:8090
        uri: lb://resource-server-photos
        predicates:
        - Path=/photos
        - Method=GET
        filters:
        - RemoveRequestHeader=Cookie
